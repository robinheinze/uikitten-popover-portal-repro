{"id":"node_modules/react-native-svg/lib/module/css.js","dependencies":[{"name":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js.map","includedInParent":true,"mtime":1606174361547},{"name":"/Users/rheinze/Code/uikitten-popover-repro/package.json","includedInParent":true,"mtime":1609961892355},{"name":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/package.json","includedInParent":true,"mtime":1606174361547},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":1,"column":35},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":1,"column":119},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/interopRequireWildcard.js"},{"name":"@babel/runtime/regenerator","loc":{"line":1,"column":392},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/regenerator/index.js"},{"name":"@babel/runtime/helpers/classCallCheck","loc":{"line":1,"column":475},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/classCallCheck.js"},{"name":"@babel/runtime/helpers/createClass","loc":{"line":1,"column":566},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/createClass.js"},{"name":"@babel/runtime/helpers/possibleConstructorReturn","loc":{"line":1,"column":668},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"},{"name":"@babel/runtime/helpers/getPrototypeOf","loc":{"line":1,"column":773},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/getPrototypeOf.js"},{"name":"@babel/runtime/helpers/assertThisInitialized","loc":{"line":1,"column":874},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/assertThisInitialized.js"},{"name":"@babel/runtime/helpers/inherits","loc":{"line":1,"column":969},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/inherits.js"},{"name":"@babel/runtime/helpers/defineProperty","loc":{"line":1,"column":1057},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/defineProperty.js"},{"name":"@babel/runtime/helpers/slicedToArray","loc":{"line":1,"column":1150},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@babel/runtime/helpers/slicedToArray.js"},{"name":"react","loc":{"line":1,"column":1234},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react/index.js"},{"name":"./xml","loc":{"line":1,"column":1261},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/xml.js"},{"name":"css-tree","loc":{"line":1,"column":1315},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/css-tree/lib/index.js"},{"name":"css-select","loc":{"line":1,"column":1374},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react-native-svg/lib/module/css.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/css-select/index.js"}],"generated":{"js":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.SvgCss=SvgCss;exports.SvgCssUri=SvgCssUri;exports.SvgWithCssUri=exports.SvgWithCss=exports.inlineStyles=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf4=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _xml=require(\"./xml\");var _cssTree=_interopRequireWildcard(require(\"css-tree\"));var _cssSelect=_interopRequireDefault(require(\"css-select\"));var _jsxFileName=\"/Users/msand/WebstormProjects/react-native-svg/src/css.tsx\";function isTag(node){return typeof node==='object';}function getParent(node){return typeof node==='object'&&node.parent||null;}function getChildren(node){return typeof node==='object'&&node.children||[];}function getName(elem){return elem.tag;}function getText(_node){return'';}function getAttributeValue(elem,name){return elem.props[name]||null;}function removeSubsets(nodes){var idx=nodes.length,node,ancestor,replace;while(--idx>-1){node=ancestor=nodes[idx];delete nodes[idx];replace=true;while(ancestor){if(nodes.includes(ancestor)){replace=false;nodes.splice(idx,1);break;}ancestor=typeof ancestor==='object'&&ancestor.parent||null;}if(replace){nodes[idx]=node;}}return nodes;}function existsOne(predicate,elems){return elems.some(function(elem){return typeof elem==='object'&&(predicate(elem)||existsOne(predicate,elem.children));});}function getSiblings(node){var parent=typeof node==='object'&&node.parent;return parent&&parent.children||[];}function hasAttrib(elem,name){return elem.props.hasOwnProperty(name);}function findOne(predicate,elems){var elem;for(var i=0,l=elems.length;i<l&&!elem;i++){var node=elems[i];if(typeof node==='string'){}else if(predicate(node)){elem=node;}else{var children=node.children;if(children.length!==0){elem=findOne(predicate,children);}}}return elem;}function findAll(predicate,nodes){var result=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];for(var i=0,j=nodes.length;i<j;i++){var node=nodes[i];if(typeof node!=='object'){continue;}if(predicate(node)){result.push(node);}var children=node.children;if(children.length!==0){findAll(predicate,children,result);}}return result;}var adapter={removeSubsets:removeSubsets,existsOne:existsOne,getSiblings:getSiblings,hasAttrib:hasAttrib,findOne:findOne,findAll:findAll,isTag:isTag,getParent:getParent,getChildren:getChildren,getName:getName,getText:getText,getAttributeValue:getAttributeValue};var cssSelectOpts={xmlMode:true,adapter:adapter};function querySelectorAll(query,elems){return(0,_cssSelect.default)(query,elems,cssSelectOpts);}function flattenToSelectors(cssAst,selectors){_cssTree.default.walk(cssAst,{visit:'Rule',enter:function enter(rule){var _ref=rule,type=_ref.type,prelude=_ref.prelude;if(type!=='Rule'){return;}var atrule=this.atrule;prelude.children.each(function(node,item){var _ref2=node,children=_ref2.children;var pseudos=[];selectors.push({item:item,atrule:atrule,rule:rule,pseudos:pseudos});children.each(function(_ref3,pseudoItem,list){var childType=_ref3.type;if(childType==='PseudoClassSelector'||childType==='PseudoElementSelector'){pseudos.push({item:pseudoItem,list:list});}});});}});}function filterByMqs(selectors){return selectors.filter(function(_ref4){var atrule=_ref4.atrule;if(atrule===null){return true;}var name=atrule.name,prelude=atrule.prelude;var atPrelude=prelude;var first=atPrelude&&atPrelude.children.first();var mq=first&&first.type==='MediaQueryList';var query=mq?_cssTree.default.generate(atPrelude):name;return useMqs.includes(query);});}var useMqs=['','screen'];function filterByPseudos(selectors){return selectors.filter(function(_ref5){var pseudos=_ref5.pseudos;return usePseudos.includes(_cssTree.default.generate({type:'Selector',children:new _cssTree.List().fromArray(pseudos.map(function(pseudo){return pseudo.item.data;}))}));});}var usePseudos=[''];function cleanPseudos(selectors){selectors.forEach(function(_ref6){var pseudos=_ref6.pseudos;return pseudos.forEach(function(pseudo){return pseudo.list.remove(pseudo.item);});});}function specificity(selector){var A=0;var B=0;var C=0;selector.children.each(function walk(node){switch(node.type){case'SelectorList':case'Selector':node.children.each(walk);break;case'IdSelector':A++;break;case'ClassSelector':case'AttributeSelector':B++;break;case'PseudoClassSelector':switch(node.name.toLowerCase()){case'not':var children=node.children;children&&children.each(walk);break;case'before':case'after':case'first-line':case'first-letter':C++;break;default:B++;}break;case'PseudoElementSelector':C++;break;case'TypeSelector':var name=node.name;if(name.charAt(name.length-1)!=='*'){C++;}break;}});return[A,B,C];}function compareSpecificity(aSpecificity,bSpecificity){for(var i=0;i<4;i+=1){if(aSpecificity[i]<bSpecificity[i]){return-1;}else if(aSpecificity[i]>bSpecificity[i]){return 1;}}return 0;}function selectorWithSpecificity(selector){return{selector:selector,specificity:specificity(selector.item.data)};}function bySelectorSpecificity(a,b){return compareSpecificity(a.specificity,b.specificity);}function pass(arr,len,chk,result){var dbl=chk*2;var l,r,e;var li,ri;var i=0;for(l=0;l<len;l+=dbl){r=l+chk;e=r+chk;if(r>len){r=len;}if(e>len){e=len;}li=l;ri=r;while(true){if(li<r&&ri<e){if(bySelectorSpecificity(arr[li],arr[ri])<=0){result[i++]=arr[li++];}else{result[i++]=arr[ri++];}}else if(li<r){result[i++]=arr[li++];}else if(ri<e){result[i++]=arr[ri++];}else{break;}}}}function exec(arr,len){var buffer=new Array(len);for(var chk=1;chk<len;chk*=2){pass(arr,len,chk,buffer);var tmp=arr;arr=buffer;buffer=tmp;}return arr;}function sortSelectors(selectors){var len=selectors.length;if(len<=1){return selectors;}var specs=selectors.map(selectorWithSpecificity);return exec(specs,len).map(function(s){return s.selector;});}var declarationParseProps={context:'declarationList',parseValue:false};function CSSStyleDeclaration(ast){var props=ast.props,styles=ast.styles;if(!props.style){props.style={};}var style=props.style;var priority=new Map();ast.style=style;ast.priority=priority;if(!styles||styles.length===0){return;}try{var declarations=_cssTree.default.parse(styles,declarationParseProps);declarations.children.each(function(node){try{var _ref7=node,property=_ref7.property,value=_ref7.value,important=_ref7.important;var name=property.trim();priority.set(name,important);style[(0,_xml.camelCase)(name)]=_cssTree.default.generate(value).trim();}catch(styleError){if(styleError.message!=='Unknown node type: undefined'){console.warn(\"Warning: Parse error when parsing inline styles, style properties of this element cannot be used. The raw styles can still be get/set using .attr('style').value. Error details: \"+styleError);}}});}catch(parseError){console.warn(\"Warning: Parse error when parsing inline styles, style properties of this element cannot be used. The raw styles can still be get/set using .attr('style').value. Error details: \"+parseError);}}function initStyle(selectedEl){if(!selectedEl.style){CSSStyleDeclaration(selectedEl);}return selectedEl;}function closestElem(node,elemName){var elem=node;while((elem=elem.parent)&&elem.tag!==elemName){}return elem;}var parseProps={parseValue:false,parseCustomProperty:false};var inlineStyles=function inlineStyles(document){var styleElements=querySelectorAll('style',document);if(styleElements.length===0){return document;}var selectors=[];for(var _iterator=styleElements,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref8;if(_isArray){if(_i>=_iterator.length)break;_ref8=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref8=_i.value;}var _element=_ref8;var _children=_element.children;if(!_children.length||closestElem(_element,'foreignObject')){continue;}try{var styleString=_children.join('');flattenToSelectors(_cssTree.default.parse(styleString,parseProps),selectors);}catch(parseError){console.warn('Warning: Parse error of styles of <style/> element, skipped. Error details: '+parseError);}}var selectorsMq=filterByMqs(selectors);var selectorsPseudo=filterByPseudos(selectorsMq);cleanPseudos(selectorsPseudo);var sortedSelectors=sortSelectors(selectorsPseudo).reverse();for(var _iterator2=sortedSelectors,_isArray2=Array.isArray(_iterator2),_i2=0,_iterator2=_isArray2?_iterator2:_iterator2[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref10;if(_isArray2){if(_i2>=_iterator2.length)break;_ref10=_iterator2[_i2++];}else{_i2=_iterator2.next();if(_i2.done)break;_ref10=_i2.value;}var _ref11=_ref10;var _rule=_ref11.rule;var _item=_ref11.item;if(_rule===null){continue;}var _selectorStr=_cssTree.default.generate(_item.data);try{var _ret=function(){var matched=querySelectorAll(_selectorStr,document).map(initStyle);if(matched.length===0){return\"continue\";}_cssTree.default.walk(_rule,{visit:'Declaration',enter:function enter(node){var _ref12=node,property=_ref12.property,value=_ref12.value,important=_ref12.important;var name=property.trim();var camel=(0,_xml.camelCase)(name);var val=_cssTree.default.generate(value).trim();for(var _iterator3=matched,_isArray3=Array.isArray(_iterator3),_i3=0,_iterator3=_isArray3?_iterator3:_iterator3[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref13;if(_isArray3){if(_i3>=_iterator3.length)break;_ref13=_iterator3[_i3++];}else{_i3=_iterator3.next();if(_i3.done)break;_ref13=_i3.value;}var _element3=_ref13;var _style=_element3.style,_priority=_element3.priority;var _current=_priority.get(name);if(_current===undefined||_current<important){_priority.set(name,important);_style[camel]=val;}}}});}();if(_ret===\"continue\")continue;}catch(selectError){if(selectError.constructor===SyntaxError){console.warn('Warning: Syntax error when trying to select \\n\\n'+_selectorStr+'\\n\\n, skipped. Error details: '+selectError);continue;}throw selectError;}}return document;};exports.inlineStyles=inlineStyles;function SvgCss(props){var xml=props.xml,override=props.override;var ast=(0,_react.useMemo)(function(){return xml!==null?(0,_xml.parse)(xml,inlineStyles):null;},[xml]);return _react.default.createElement(_xml.SvgAst,{ast:ast,override:override||props,__source:{fileName:_jsxFileName,lineNumber:701}});}function SvgCssUri(props){var uri=props.uri;var _useState=(0,_react.useState)(null),_useState2=(0,_slicedToArray2.default)(_useState,2),xml=_useState2[0],setXml=_useState2[1];(0,_react.useEffect)(function(){uri?(0,_xml.fetchText)(uri).then(setXml).catch(_xml.err):setXml(null);},[uri]);return _react.default.createElement(SvgCss,{xml:xml,override:props,__source:{fileName:_jsxFileName,lineNumber:714}});}var SvgWithCss=function(_Component){(0,_inherits2.default)(SvgWithCss,_Component);function SvgWithCss(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,SvgWithCss);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf4.default)(SvgWithCss)).call.apply(_getPrototypeOf2,[this].concat(args)));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"state\",{ast:null});return _this;}(0,_createClass2.default)(SvgWithCss,[{key:\"componentDidMount\",value:function componentDidMount(){this.parse(this.props.xml);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var xml=this.props.xml;if(xml!==prevProps.xml){this.parse(xml);}}},{key:\"parse\",value:function parse(xml){try{this.setState({ast:xml?(0,_xml.parse)(xml,inlineStyles):null});}catch(e){console.error(e);}}},{key:\"render\",value:function render(){var props=this.props,ast=this.state.ast;return _react.default.createElement(_xml.SvgAst,{ast:ast,override:props.override||props,__source:{fileName:_jsxFileName,lineNumber:742}});}}]);return SvgWithCss;}(_react.Component);exports.SvgWithCss=SvgWithCss;var SvgWithCssUri=function(_Component2){(0,_inherits2.default)(SvgWithCssUri,_Component2);function SvgWithCssUri(){var _getPrototypeOf3;var _this2;(0,_classCallCheck2.default)(this,SvgWithCssUri);for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}_this2=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf3=(0,_getPrototypeOf4.default)(SvgWithCssUri)).call.apply(_getPrototypeOf3,[this].concat(args)));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this2),\"state\",{xml:null});return _this2;}(0,_createClass2.default)(SvgWithCssUri,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetch(this.props.uri);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var uri=this.props.uri;if(uri!==prevProps.uri){this.fetch(uri);}}},{key:\"fetch\",value:function fetch(uri){return _regenerator.default.async(function fetch$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.t0=this;if(!uri){_context.next=8;break;}_context.next=5;return _regenerator.default.awrap((0,_xml.fetchText)(uri));case 5:_context.t1=_context.sent;_context.next=9;break;case 8:_context.t1=null;case 9:_context.t2=_context.t1;_context.t3={xml:_context.t2};_context.t0.setState.call(_context.t0,_context.t3);_context.next=17;break;case 14:_context.prev=14;_context.t4=_context[\"catch\"](0);console.error(_context.t4);case 17:case\"end\":return _context.stop();}}},null,this,[[0,14]],Promise);}},{key:\"render\",value:function render(){var props=this.props,xml=this.state.xml;return _react.default.createElement(SvgWithCss,{xml:xml,override:props,__source:{fileName:_jsxFileName,lineNumber:769}});}}]);return SvgWithCssUri;}(_react.Component);exports.SvgWithCssUri=SvgWithCssUri;\n"},"sourceMaps":{"js":{"version":3,"sources":["css.tsx"],"names":["isTag","node","getParent","parent","getChildren","children","getName","elem","tag","getText","_node","getAttributeValue","name","props","removeSubsets","nodes","idx","length","ancestor","replace","includes","splice","existsOne","predicate","elems","some","getSiblings","hasAttrib","hasOwnProperty","findOne","i","l","findAll","result","j","push","adapter","cssSelectOpts","xmlMode","querySelectorAll","query","flattenToSelectors","cssAst","selectors","csstree","walk","visit","enter","rule","type","prelude","atrule","each","item","pseudos","pseudoItem","list","childType","filterByMqs","filter","atPrelude","first","mq","generate","useMqs","filterByPseudos","usePseudos","List","fromArray","map","pseudo","data","cleanPseudos","forEach","remove","specificity","selector","A","B","C","toLowerCase","charAt","compareSpecificity","aSpecificity","bSpecificity","selectorWithSpecificity","bySelectorSpecificity","a","b","pass","arr","len","chk","dbl","r","e","li","ri","exec","buffer","Array","tmp","sortSelectors","specs","s","declarationParseProps","context","parseValue","CSSStyleDeclaration","ast","styles","style","priority","Map","declarations","parse","property","value","important","trim","set","styleError","message","console","warn","parseError","initStyle","selectedEl","closestElem","elemName","parseProps","parseCustomProperty","inlineStyles","document","styleElements","element","styleString","join","selectorsMq","selectorsPseudo","sortedSelectors","reverse","selectorStr","matched","camel","val","current","get","undefined","selectError","constructor","SyntaxError","SvgCss","xml","override","SvgCssUri","uri","setXml","then","catch","err","SvgWithCss","prevProps","setState","error","state","Component","SvgWithCssUri","fetch"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useMemo, useState } from 'react';\nimport {\n  camelCase,\n  err,\n  fetchText,\n  JsxAST,\n  Middleware,\n  parse,\n  Styles,\n  SvgAst,\n  UriProps,\n  UriState,\n  XmlAST,\n  XmlProps,\n  XmlState,\n} from './xml';\nimport csstree, {\n  Atrule,\n  AtrulePrelude,\n  CssNode,\n  Declaration,\n  DeclarationList,\n  List,\n  ListItem,\n  PseudoClassSelector,\n  Rule,\n  Selector,\n  SelectorList,\n} from 'css-tree';\nimport cssSelect, { Adapter, Options, Predicate, Query } from 'css-select';\n\n/*\n * Style element inlining experiment based on SVGO\n * https://github.com/svg/svgo/blob/11f9c797411a8de966aacc4cb83dbb3e471757bc/plugins/inlineStyles.js\n * */\n\n/**\n * DOMUtils API for rnsvg AST (used by css-select)\n */\n// is the node a tag?\n// isTag: ( node:Node ) => isTag:Boolean\nfunction isTag(node: XmlAST | string): node is XmlAST {\n  return typeof node === 'object';\n}\n\n// get the parent of the node\n// getParent: ( node:Node ) => parentNode:Node\n// returns null when no parent exists\nfunction getParent(node: XmlAST | string): XmlAST {\n  return ((typeof node === 'object' && node.parent) || null) as XmlAST;\n}\n\n// get the node's children\n// getChildren: ( node:Node ) => children:[Node]\nfunction getChildren(node: XmlAST | string): Array<XmlAST | string> {\n  return (typeof node === 'object' && node.children) || [];\n}\n\n// get the name of the tag'\n// getName: ( elem:ElementNode ) => tagName:String\nfunction getName(elem: XmlAST): string {\n  return elem.tag;\n}\n\n// get the text content of the node, and its children if it has any\n// getText: ( node:Node ) => text:String\n// returns empty string when there is no text\nfunction getText(_node: XmlAST | string): string {\n  return '';\n}\n\n// get the attribute value\n// getAttributeValue: ( elem:ElementNode, name:String ) => value:String\n// returns null when attribute doesn't exist\nfunction getAttributeValue(elem: XmlAST, name: string): string {\n  return (elem.props[name] || null) as string;\n}\n\n// takes an array of nodes, and removes any duplicates, as well as any nodes\n// whose ancestors are also in the array\nfunction removeSubsets(nodes: Array<XmlAST | string>): Array<XmlAST | string> {\n  let idx = nodes.length,\n    node,\n    ancestor,\n    replace;\n\n  // Check if each node (or one of its ancestors) is already contained in the\n  // array.\n  while (--idx > -1) {\n    node = ancestor = nodes[idx];\n\n    // Temporarily remove the node under consideration\n    delete nodes[idx];\n    replace = true;\n\n    while (ancestor) {\n      if (nodes.includes(ancestor)) {\n        replace = false;\n        nodes.splice(idx, 1);\n        break;\n      }\n      ancestor = (typeof ancestor === 'object' && ancestor.parent) || null;\n    }\n\n    // If the node has been found to be unique, re-insert it.\n    if (replace) {\n      nodes[idx] = node;\n    }\n  }\n\n  return nodes;\n}\n\n// does at least one of passed element nodes pass the test predicate?\nfunction existsOne(\n  predicate: Predicate<XmlAST>,\n  elems: Array<XmlAST | string>,\n): boolean {\n  return elems.some(\n    elem =>\n      typeof elem === 'object' &&\n      (predicate(elem) || existsOne(predicate, elem.children)),\n  );\n}\n\n/*\n  get the siblings of the node. Note that unlike jQuery's `siblings` method,\n  this is expected to include the current node as well\n*/\nfunction getSiblings(node: XmlAST | string): Array<XmlAST | string> {\n  const parent = typeof node === 'object' && node.parent;\n  return (parent && parent.children) || [];\n}\n\n// does the element have the named attribute?\nfunction hasAttrib(elem: XmlAST, name: string): boolean {\n  return elem.props.hasOwnProperty(name);\n}\n\n// finds the first node in the array that matches the test predicate, or one\n// of its children\nfunction findOne(\n  predicate: Predicate<XmlAST>,\n  elems: Array<XmlAST | string>,\n): XmlAST | undefined {\n  let elem: XmlAST | undefined;\n\n  for (let i = 0, l = elems.length; i < l && !elem; i++) {\n    const node = elems[i];\n    if (typeof node === 'string') {\n    } else if (predicate(node)) {\n      elem = node;\n    } else {\n      const { children } = node;\n      if (children.length !== 0) {\n        elem = findOne(predicate, children);\n      }\n    }\n  }\n\n  return elem;\n}\n\n// finds all of the element nodes in the array that match the test predicate,\n// as well as any of their children that match it\nfunction findAll(\n  predicate: Predicate<XmlAST>,\n  nodes: Array<XmlAST | string>,\n  result: Array<XmlAST> = [],\n): Array<XmlAST> {\n  for (let i = 0, j = nodes.length; i < j; i++) {\n    const node = nodes[i];\n    if (typeof node !== 'object') {\n      continue;\n    }\n    if (predicate(node)) {\n      result.push(node);\n    }\n    const { children } = node;\n    if (children.length !== 0) {\n      findAll(predicate, children, result);\n    }\n  }\n\n  return result;\n}\n\nconst adapter: Adapter<XmlAST | string, XmlAST> = {\n  removeSubsets,\n  existsOne,\n  getSiblings,\n  hasAttrib,\n  findOne,\n  findAll,\n  isTag,\n  getParent,\n  getChildren,\n  getName,\n  getText,\n  getAttributeValue,\n};\n\nconst cssSelectOpts: Options<XmlAST | string, XmlAST> = {\n  xmlMode: true,\n  adapter,\n};\n\n/**\n * Evaluate a string of CSS selectors against the element and returns matched elements.\n *\n * @param {Query} query can be either a CSS selector string or a compiled query function.\n * @param {Array<XmlAST> | XmlAST} elems Elements to query. If it is an element, its children will be queried.\n * @return {Array<XmlAST>} All matching elements.\n */\nfunction querySelectorAll(query: Query, elems: XmlAST | XmlAST[]): XmlAST[] {\n  return cssSelect(query, elems, cssSelectOpts);\n}\n\ntype FlatPseudoSelector = {\n  item: ListItem<CssNode>;\n  list: List<CssNode>;\n};\ntype FlatPseudoSelectorList = FlatPseudoSelector[];\ntype FlatSelector = {\n  item: ListItem<CssNode>;\n  atrule: Atrule | null;\n  rule: CssNode;\n  pseudos: FlatPseudoSelectorList;\n};\ntype FlatSelectorList = FlatSelector[];\n\n/**\n * Flatten a CSS AST to a selectors list.\n *\n * @param {Object} cssAst css-tree AST to flatten\n * @param {Array} selectors\n */\nfunction flattenToSelectors(cssAst: CssNode, selectors: FlatSelectorList) {\n  csstree.walk(cssAst, {\n    visit: 'Rule',\n    enter(rule: CssNode) {\n      const { type, prelude } = rule as Rule;\n      if (type !== 'Rule') {\n        return;\n      }\n      const atrule = this.atrule;\n      (prelude as SelectorList).children.each((node, item) => {\n        const { children } = node as Selector;\n        const pseudos: FlatPseudoSelectorList = [];\n        selectors.push({\n          item,\n          atrule,\n          rule,\n          pseudos,\n        });\n        children.each(({ type: childType }, pseudoItem, list) => {\n          if (\n            childType === 'PseudoClassSelector' ||\n            childType === 'PseudoElementSelector'\n          ) {\n            pseudos.push({\n              item: pseudoItem,\n              list,\n            });\n          }\n        });\n      });\n    },\n  });\n}\n\n/**\n * Filter selectors by Media Query.\n *\n * @param {Array} selectors to filter\n * @return {Array} Filtered selectors that match the passed media queries\n */\nfunction filterByMqs(selectors: FlatSelectorList) {\n  return selectors.filter(({ atrule }) => {\n    if (atrule === null) {\n      return true;\n    }\n    const { name, prelude } = atrule;\n    const atPrelude = prelude as AtrulePrelude;\n    const first = atPrelude && atPrelude.children.first();\n    const mq = first && first.type === 'MediaQueryList';\n    const query = mq ? csstree.generate(atPrelude) : name;\n    return useMqs.includes(query);\n  });\n}\n// useMqs Array with strings of media queries that should pass (<name> <expression>)\nconst useMqs = ['', 'screen'];\n\n/**\n * Filter selectors by the pseudo-elements and/or -classes they contain.\n *\n * @param {Array} selectors to filter\n * @return {Array} Filtered selectors that match the passed pseudo-elements and/or -classes\n */\nfunction filterByPseudos(selectors: FlatSelectorList) {\n  return selectors.filter(({ pseudos }) =>\n    usePseudos.includes(\n      csstree.generate({\n        type: 'Selector',\n        children: new List<CssNode>().fromArray(\n          pseudos.map(pseudo => pseudo.item.data),\n        ),\n      }),\n    ),\n  );\n}\n// usePseudos Array with strings of single or sequence of pseudo-elements and/or -classes that should pass\nconst usePseudos = [''];\n\n/**\n * Remove pseudo-elements and/or -classes from the selectors for proper matching.\n *\n * @param {Array} selectors to clean\n * @return {Array} Selectors without pseudo-elements and/or -classes\n */\nfunction cleanPseudos(selectors: FlatSelectorList) {\n  selectors.forEach(({ pseudos }) =>\n    pseudos.forEach(pseudo => pseudo.list.remove(pseudo.item)),\n  );\n}\n\ntype Specificity = [number, number, number];\nfunction specificity(selector: Selector): Specificity {\n  let A = 0;\n  let B = 0;\n  let C = 0;\n\n  selector.children.each(function walk(node: CssNode) {\n    switch (node.type) {\n      case 'SelectorList':\n      case 'Selector':\n        node.children.each(walk);\n        break;\n\n      case 'IdSelector':\n        A++;\n        break;\n\n      case 'ClassSelector':\n      case 'AttributeSelector':\n        B++;\n        break;\n\n      case 'PseudoClassSelector':\n        switch (node.name.toLowerCase()) {\n          case 'not':\n            const children = (node as PseudoClassSelector).children;\n            children && children.each(walk);\n            break;\n\n          case 'before':\n          case 'after':\n          case 'first-line':\n          case 'first-letter':\n            C++;\n            break;\n\n          // TODO: support for :nth-*(.. of <SelectorList>), :matches(), :has()\n\n          default:\n            B++;\n        }\n        break;\n\n      case 'PseudoElementSelector':\n        C++;\n        break;\n\n      case 'TypeSelector':\n        // ignore universal selector\n        const { name } = node;\n        if (name.charAt(name.length - 1) !== '*') {\n          C++;\n        }\n        break;\n    }\n  });\n\n  return [A, B, C];\n}\n\n/**\n * Compares two selector specificities.\n * extracted from https://github.com/keeganstreet/specificity/blob/master/specificity.js#L211\n *\n * @param {Array} aSpecificity Specificity of selector A\n * @param {Array} bSpecificity Specificity of selector B\n * @return {Number} Score of selector specificity A compared to selector specificity B\n */\nfunction compareSpecificity(\n  aSpecificity: Specificity,\n  bSpecificity: Specificity,\n): number {\n  for (let i = 0; i < 4; i += 1) {\n    if (aSpecificity[i] < bSpecificity[i]) {\n      return -1;\n    } else if (aSpecificity[i] > bSpecificity[i]) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\ntype Spec = {\n  selector: FlatSelector;\n  specificity: Specificity;\n};\nfunction selectorWithSpecificity(selector: FlatSelector): Spec {\n  return {\n    selector,\n    specificity: specificity(selector.item.data as Selector),\n  };\n}\n\n/**\n * Compare two simple selectors.\n *\n * @param {Object} a Simple selector A\n * @param {Object} b Simple selector B\n * @return {Number} Score of selector A compared to selector B\n */\nfunction bySelectorSpecificity(a: Spec, b: Spec): number {\n  return compareSpecificity(a.specificity, b.specificity);\n}\n\n// Run a single pass with the given chunk size.\nfunction pass(arr: Spec[], len: number, chk: number, result: Spec[]) {\n  // Step size / double chunk size.\n  const dbl = chk * 2;\n  // Bounds of the left and right chunks.\n  let l, r, e;\n  // Iterators over the left and right chunk.\n  let li, ri;\n\n  // Iterate over pairs of chunks.\n  let i = 0;\n  for (l = 0; l < len; l += dbl) {\n    r = l + chk;\n    e = r + chk;\n    if (r > len) {\n      r = len;\n    }\n    if (e > len) {\n      e = len;\n    }\n\n    // Iterate both chunks in parallel.\n    li = l;\n    ri = r;\n    while (true) {\n      // Compare the chunks.\n      if (li < r && ri < e) {\n        // This works for a regular `sort()` compatible comparator,\n        // but also for a simple comparator like: `a > b`\n        if (bySelectorSpecificity(arr[li], arr[ri]) <= 0) {\n          result[i++] = arr[li++];\n        } else {\n          result[i++] = arr[ri++];\n        }\n      }\n      // Nothing to compare, just flush what's left.\n      else if (li < r) {\n        result[i++] = arr[li++];\n      } else if (ri < e) {\n        result[i++] = arr[ri++];\n      }\n      // Both iterators are at the chunk ends.\n      else {\n        break;\n      }\n    }\n  }\n}\n\n// Execute the sort using the input array and a second buffer as work space.\n// Returns one of those two, containing the final result.\nfunction exec(arr: Spec[], len: number): Spec[] {\n  // Rather than dividing input, simply iterate chunks of 1, 2, 4, 8, etc.\n  // Chunks are the size of the left or right hand in merge sort.\n  // Stop when the left-hand covers all of the array.\n  let buffer = new Array(len);\n  for (let chk = 1; chk < len; chk *= 2) {\n    pass(arr, len, chk, buffer);\n    const tmp = arr;\n    arr = buffer;\n    buffer = tmp;\n  }\n  return arr;\n}\n\n/**\n * Sort selectors stably by their specificity.\n *\n * @param {Array} selectors to be sorted\n * @return {Array} Stable sorted selectors\n */\nfunction sortSelectors(selectors: FlatSelectorList) {\n  // Short-circuit when there's nothing to sort.\n  const len = selectors.length;\n  if (len <= 1) {\n    return selectors;\n  }\n  const specs = selectors.map(selectorWithSpecificity);\n  return exec(specs, len).map(s => s.selector);\n}\n\nconst declarationParseProps = {\n  context: 'declarationList',\n  parseValue: false,\n};\nfunction CSSStyleDeclaration(ast: XmlAST) {\n  const { props, styles } = ast;\n  if (!props.style) {\n    props.style = {};\n  }\n  const style = props.style as Styles;\n  const priority = new Map();\n  ast.style = style;\n  ast.priority = priority;\n  if (!styles || styles.length === 0) {\n    return;\n  }\n  try {\n    const declarations = csstree.parse(\n      styles,\n      declarationParseProps,\n    ) as DeclarationList;\n    declarations.children.each(node => {\n      try {\n        const { property, value, important } = node as Declaration;\n        const name = property.trim();\n        priority.set(name, important);\n        style[camelCase(name)] = csstree.generate(value).trim();\n      } catch (styleError) {\n        if (styleError.message !== 'Unknown node type: undefined') {\n          console.warn(\n            \"Warning: Parse error when parsing inline styles, style properties of this element cannot be used. The raw styles can still be get/set using .attr('style').value. Error details: \" +\n              styleError,\n          );\n        }\n      }\n    });\n  } catch (parseError) {\n    console.warn(\n      \"Warning: Parse error when parsing inline styles, style properties of this element cannot be used. The raw styles can still be get/set using .attr('style').value. Error details: \" +\n        parseError,\n    );\n  }\n}\n\ninterface StyledAST extends XmlAST {\n  style: Styles;\n  priority: Map<string, boolean | undefined>;\n}\nfunction initStyle(selectedEl: XmlAST): StyledAST {\n  if (!selectedEl.style) {\n    CSSStyleDeclaration(selectedEl);\n  }\n  return selectedEl as StyledAST;\n}\n\n/**\n * Find the closest ancestor of the current element.\n * @param node\n * @param elemName\n * @return {?Object}\n */\nfunction closestElem(node: XmlAST, elemName: string) {\n  let elem: XmlAST | null = node;\n  while ((elem = elem.parent) && elem.tag !== elemName) {}\n  return elem;\n}\n\nconst parseProps = {\n  parseValue: false,\n  parseCustomProperty: false,\n};\n\n/**\n * Moves + merges styles from style elements to element styles\n *\n * Options\n *   useMqs (default: ['', 'screen'])\n *     what media queries to be used\n *     empty string element for styles outside media queries\n *\n *   usePseudos (default: [''])\n *     what pseudo-classes/-elements to be used\n *     empty string element for all non-pseudo-classes and/or -elements\n *\n * @param {Object} document document element\n *\n * @author strarsis <strarsis@gmail.com>\n * @author modified by: msand <msand@abo.fi>\n */\nexport const inlineStyles: Middleware = function inlineStyles(\n  document: XmlAST,\n) {\n  // collect <style/>s\n  const styleElements = querySelectorAll('style', document);\n\n  //no <styles/>s, nothing to do\n  if (styleElements.length === 0) {\n    return document;\n  }\n\n  const selectors: FlatSelectorList = [];\n\n  for (let element of styleElements) {\n    const { children } = element;\n    if (!children.length || closestElem(element, 'foreignObject')) {\n      // skip empty <style/>s or <foreignObject> content.\n      continue;\n    }\n\n    // collect <style/>s and their css ast\n    try {\n      const styleString = children.join('');\n      flattenToSelectors(csstree.parse(styleString, parseProps), selectors);\n    } catch (parseError) {\n      console.warn(\n        'Warning: Parse error of styles of <style/> element, skipped. Error details: ' +\n          parseError,\n      );\n    }\n  }\n\n  // filter for mediaqueries to be used or without any mediaquery\n  const selectorsMq = filterByMqs(selectors);\n\n  // filter for pseudo elements to be used\n  const selectorsPseudo = filterByPseudos(selectorsMq);\n\n  // remove PseudoClass from its SimpleSelector for proper matching\n  cleanPseudos(selectorsPseudo);\n\n  // stable sort selectors\n  const sortedSelectors = sortSelectors(selectorsPseudo).reverse();\n\n  // match selectors\n  for (let { rule, item } of sortedSelectors) {\n    if (rule === null) {\n      continue;\n    }\n    const selectorStr = csstree.generate(item.data);\n    try {\n      // apply <style/> to matched elements\n      const matched = querySelectorAll(selectorStr, document).map(initStyle);\n      if (matched.length === 0) {\n        continue;\n      }\n      csstree.walk(rule, {\n        visit: 'Declaration',\n        enter(node: CssNode) {\n          const { property, value, important } = node as Declaration;\n          // existing inline styles have higher priority\n          // no inline styles, external styles,                                    external styles used\n          // inline styles,    external styles same   priority as inline styles,   inline   styles used\n          // inline styles,    external styles higher priority than inline styles, external styles used\n          const name = property.trim();\n          const camel = camelCase(name);\n          const val = csstree.generate(value).trim();\n          for (let element of matched) {\n            const { style, priority } = element;\n            const current = priority.get(name);\n            if (current === undefined || current < important) {\n              priority.set(name, important as boolean);\n              style[camel] = val;\n            }\n          }\n        },\n      });\n    } catch (selectError) {\n      if (selectError.constructor === SyntaxError) {\n        console.warn(\n          'Warning: Syntax error when trying to select \\n\\n' +\n            selectorStr +\n            '\\n\\n, skipped. Error details: ' +\n            selectError,\n        );\n        continue;\n      }\n      throw selectError;\n    }\n  }\n\n  return document;\n};\n\nexport function SvgCss(props: XmlProps) {\n  const { xml, override } = props;\n  const ast = useMemo<JsxAST | null>(\n    () => (xml !== null ? parse(xml, inlineStyles) : null),\n    [xml],\n  );\n  return <SvgAst ast={ast} override={override || props} />;\n}\n\nexport function SvgCssUri(props: UriProps) {\n  const { uri } = props;\n  const [xml, setXml] = useState<string | null>(null);\n  useEffect(() => {\n    uri\n      ? fetchText(uri)\n          .then(setXml)\n          .catch(err)\n      : setXml(null);\n  }, [uri]);\n  return <SvgCss xml={xml} override={props} />;\n}\n\n// Extending Component is required for Animated support.\n\nexport class SvgWithCss extends Component<XmlProps, XmlState> {\n  state = { ast: null };\n  componentDidMount() {\n    this.parse(this.props.xml);\n  }\n  componentDidUpdate(prevProps: { xml: string | null }) {\n    const { xml } = this.props;\n    if (xml !== prevProps.xml) {\n      this.parse(xml);\n    }\n  }\n  parse(xml: string | null) {\n    try {\n      this.setState({ ast: xml ? parse(xml, inlineStyles) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: { ast },\n    } = this;\n    return <SvgAst ast={ast} override={props.override || props} />;\n  }\n}\n\nexport class SvgWithCssUri extends Component<UriProps, UriState> {\n  state = { xml: null };\n  componentDidMount() {\n    this.fetch(this.props.uri);\n  }\n  componentDidUpdate(prevProps: { uri: string | null }) {\n    const { uri } = this.props;\n    if (uri !== prevProps.uri) {\n      this.fetch(uri);\n    }\n  }\n  async fetch(uri: string | null) {\n    try {\n      this.setState({ xml: uri ? await fetchText(uri) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: { xml },\n    } = this;\n    return <SvgWithCss xml={xml} override={props} />;\n  }\n}\n"]}},"error":null,"hash":"eabdde053d5b3ef9fefdd3fc7fcaa11a","cacheData":{"env":{}}}