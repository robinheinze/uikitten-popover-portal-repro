{"id":"node_modules/@ui-kitten/components/ui/drawer/drawer.component.js","dependencies":[{"name":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/ui/drawer/drawer.component.js.map","includedInParent":true,"mtime":1606174345611},{"name":"/Users/rheinze/Code/uikitten-popover-repro/package.json","includedInParent":true,"mtime":1609961906808},{"name":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/package.json","includedInParent":true,"mtime":1606174345611},{"name":"react","loc":{"line":17,"column":40},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/ui/drawer/drawer.component.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/react/index.js"},{"name":"../../devsupport","loc":{"line":18,"column":29},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/ui/drawer/drawer.component.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/devsupport/index.js"},{"name":"../../theme","loc":{"line":19,"column":24},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/ui/drawer/drawer.component.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/theme/index.js"},{"name":"../menu/menu.component","loc":{"line":20,"column":33},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/ui/drawer/drawer.component.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/@ui-kitten/components/ui/menu/menu.component.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst devsupport_1 = require(\"../../devsupport\");\nconst theme_1 = require(\"../../theme\");\nconst menu_component_1 = require(\"../menu/menu.component\");\n/**\n * Navigation panel which slides from the side of the screen.\n * Drawer should contain DrawerItem or DrawerGroup components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<DrawerItemProps> | ReactElement<DrawerItemProps>[]} children -\n * items to be rendered within drawer.\n *\n * @property {IndexPath} selectedIndex - Index of selected item.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Drawer becomes sectioned when DrawerGroup is rendered within children.\n * Updating this property is not required if marking items selected is not needed.\n *\n * @property {(IndexPath | IndexPath[]) => void} onSelect - Called when item is pressed.\n * Called with `row: number` for non-grouped items.\n * Called with `row: number, section: number` for items rendered within group,\n * where row - index of item in group, section - index of group in list.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` or `noDivider`.\n *\n * @property {ListProps} ...ListProps - Any props applied to List component,\n * excluding `renderItem` and `data`.\n *\n * @overview-example DrawerSimpleUsage\n *\n * @overview-example DrawerIndexType\n * Drawer works with special index object - IndexPath.\n * For non-grouped items in drawer, there is only a `row` property.\n * Otherwise, `row` is an index of option within the group, section - index of group in drawer.\n * ```\n * interface IndexPath {\n *   row: number;\n *   section?: number;\n * }\n * ```\n *\n * @overview-example Using with React Navigation\n * Drawer can also be [configured with React Navigation](guides/configure-navigation)\n * to provide a navigational component.\n *\n * ```\n * import React from 'react';\n * import { NavigationContainer } from '@react-navigation/native';\n * import { createDrawerNavigator } from '@react-navigation/drawer';\n * import { Drawer, DrawerItem, Layout, Text, IndexPath } from '@ui-kitten/components';\n *\n * const { Navigator, Screen } = createDrawerNavigator();\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const DrawerContent = ({ navigation, state }) => (\n *   <Drawer\n *     selectedIndex={new IndexPath(state.index)}\n *     onSelect={index => navigation.navigate(state.routeNames[index.row])}>\n *     <DrawerItem title='Users' />\n *     <DrawerItem title='Orders' />\n *   </Drawer>\n * );\n *\n * export const DrawerNavigator = () => (\n *   <Navigator drawerContent={props => <DrawerContent {...props}/>}>\n *     <Screen name='Users' component={UsersScreen}/>\n *     <Screen name='Orders' component={OrdersScreen}/>\n *   </Navigator>\n * );\n *\n * export const AppNavigator = () => (\n *   <NavigationContainer>\n *     <DrawerNavigator/>\n *   </NavigationContainer>\n * );\n * ```\n *\n * @overview-example DrawerNoMarkers\n * Pressing of drawer items can be handled without marking items.\n *\n * @overview-example DrawerAccessories\n * Drawer may be configured with header and footer,\n * and items may contain inner views configured with `accessoryLeft` and `accessoryRight` properties.\n * Within Eva, item accessories are expected to be images or [svg icons](guides/icon-packages).\n *\n * @overview-example DrawerGroups\n * And be grouped within `DrawerGroup` component.\n *\n * @overview-example DrawerStyling\n * Drawer and it's inner views can be styled by passing them as function components.\n * ```\n * import { DrawerItem, Text } from '@ui-kitten/components';\n *\n * <DrawerItem\n *   title={evaProps => <Text {...evaProps}>USERS</Text>}>\n * </DrawerItem>\n * ```\n *\n * @overview-example DrawerTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\nlet Drawer = class Drawer extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.getComponentStyle = (source) => {\n            const { headerPaddingHorizontal, headerPaddingVertical, footerPaddingHorizontal, footerPaddingVertical, ...containerParameters } = source;\n            return {\n                container: containerParameters,\n                header: {\n                    paddingHorizontal: headerPaddingHorizontal,\n                    paddingVertical: headerPaddingVertical,\n                },\n                footer: {\n                    paddingHorizontal: footerPaddingHorizontal,\n                    paddingVertical: footerPaddingVertical,\n                },\n            };\n        };\n    }\n    render() {\n        const { eva, style, header, footer, ...menuProps } = this.props;\n        const evaStyle = this.getComponentStyle(eva.style);\n        return (react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(devsupport_1.FalsyFC, { style: evaStyle.header, component: header }),\n            react_1.default.createElement(menu_component_1.Menu, Object.assign({ style: [evaStyle.container, style], showsVerticalScrollIndicator: false, bounces: false }, menuProps)),\n            react_1.default.createElement(devsupport_1.FalsyFC, { style: evaStyle.footer, component: footer })));\n    }\n};\nDrawer = __decorate([\n    theme_1.styled('Drawer')\n], Drawer);\nexports.Drawer = Drawer;\n"},"sourceMaps":{"js":{"version":3,"file":"drawer.component.js","sourceRoot":"","sources":["../../../../../src/components/ui/drawer/drawer.component.tsx"],"names":[],"mappings":";AAAA;;;;GAIG;;;;;;;;;;;AAEH,kDAA0B;AAE1B,iDAI0B;AAC1B,uCAIqB;AACrB,2DAGgC;AAahC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4GG;AAEH,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,eAAK,CAAC,SAAsB;IAAxD;;QAEU,sBAAiB,GAAG,CAAC,MAAiB,EAAE,EAAE;YAChD,MAAM,EACJ,uBAAuB,EACvB,qBAAqB,EACrB,uBAAuB,EACvB,qBAAqB,EACrB,GAAG,mBAAmB,EACvB,GAAG,MAAM,CAAC;YAEX,OAAO;gBACL,SAAS,EAAE,mBAAmB;gBAC9B,MAAM,EAAE;oBACN,iBAAiB,EAAE,uBAAuB;oBAC1C,eAAe,EAAE,qBAAqB;iBACvC;gBACD,MAAM,EAAE;oBACN,iBAAiB,EAAE,uBAAuB;oBAC1C,eAAe,EAAE,qBAAqB;iBACvC;aACF,CAAC;QACJ,CAAC,CAAC;IAyBJ,CAAC;IAvBQ,MAAM;QACX,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAChE,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnD,OAAO,CACL,8BAAC,eAAK,CAAC,QAAQ;YACb,8BAAC,oBAAO,IACN,KAAK,EAAE,QAAQ,CAAC,MAAM,EACtB,SAAS,EAAE,MAAM,GACjB;YACF,8BAAC,qBAAI,kBACH,KAAK,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,EAClC,4BAA4B,EAAE,KAAK,EACnC,OAAO,EAAE,KAAK,IACV,SAAS,EACb;YACF,8BAAC,oBAAO,IACN,KAAK,EAAE,QAAQ,CAAC,MAAM,EACtB,SAAS,EAAE,MAAM,GACjB,CACa,CAClB,CAAC;IACJ,CAAC;CACF,CAAA;AA/CY,MAAM;IADlB,cAAM,CAAC,QAAQ,CAAC;GACJ,MAAM,CA+ClB;AA/CY,wBAAM","sourcesContent":[null]}},"error":null,"hash":"3fad1716fd37918b268e96ba280e7d30","cacheData":{"env":{}}}