{"id":"node_modules/entities/lib/encode.js","dependencies":[{"name":"/Users/rheinze/Code/uikitten-popover-repro/package.json","includedInParent":true,"mtime":1609961892355},{"name":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/entities/package.json","includedInParent":true,"mtime":1609958317176},{"name":"./maps/xml.json","loc":{"line":7,"column":41},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/entities/lib/encode.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/entities/lib/maps/xml.json"},{"name":"./maps/entities.json","loc":{"line":11,"column":46},"parent":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/entities/lib/encode.js","resolved":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/entities/lib/maps/entities.json"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/entities/lib/encode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/entities/lib/encode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}}],"sources":{"node_modules/entities/lib/encode.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n"},"lineCount":74}},"error":null,"hash":"88773ecf843b450a06b5a143ebe85172","cacheData":{"env":{}}}