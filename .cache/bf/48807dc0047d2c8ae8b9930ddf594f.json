{"id":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","dependencies":[{"name":"/Users/rheinze/Code/uikitten-popover-repro/package.json","includedInParent":true,"mtime":1609961906808},{"name":"/Users/rheinze/Code/uikitten-popover-repro/node_modules/inline-style-prefixer/package.json","includedInParent":true,"mtime":1606848739929}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxIE;\nvar alternativeValues = {\n  'space-around': 'distribute',\n  'space-between': 'justify',\n  'flex-start': 'start',\n  'flex-end': 'end'\n};\nvar alternativeProps = {\n  alignContent: 'msFlexLinePack',\n  alignSelf: 'msFlexItemAlign',\n  alignItems: 'msFlexAlign',\n  justifyContent: 'msFlexPack',\n  order: 'msFlexOrder',\n  flexGrow: 'msFlexPositive',\n  flexShrink: 'msFlexNegative',\n  flexBasis: 'msFlexPreferredSize'\n  // Full expanded syntax is flex-grow | flex-shrink | flex-basis.\n};var flexShorthandMappings = {\n  auto: '1 1 auto',\n  inherit: 'inherit',\n  initial: '0 1 auto',\n  none: '0 0 auto',\n  unset: 'unset'\n};\nvar isUnitlessNumber = /^\\d+(\\.\\d+)?$/;\n\nfunction flexboxIE(property, value, style) {\n  if (Object.prototype.hasOwnProperty.call(alternativeProps, property)) {\n    style[alternativeProps[property]] = alternativeValues[value] || value;\n  }\n  if (property === 'flex') {\n    // For certain values we can do straight mappings based on the spec\n    // for the expansions.\n    if (Object.prototype.hasOwnProperty.call(flexShorthandMappings, value)) {\n      style.msFlex = flexShorthandMappings[value];\n      return;\n    }\n    // Here we have no direct mapping, so we favor looking for a\n    // unitless positive number as that will be the most common use-case.\n    if (isUnitlessNumber.test(value)) {\n      style.msFlex = value + ' 1 0%';\n      return;\n    }\n\n    // The next thing we can look for is if there are multiple values.\n    var flexValues = value.split(/\\s/);\n    // If we only have a single value that wasn't a positive unitless\n    // or a pre-mapped value, then we can assume it is a unit value.\n    switch (flexValues.length) {\n      case 1:\n        style.msFlex = '1 1 ' + value;\n        return;\n      case 2:\n        // If we have 2 units, then we expect that the first will\n        // always be a unitless number and represents flex-grow.\n        // The second unit will represent flex-shrink for a unitless\n        // value, or flex-basis otherwise.\n        if (isUnitlessNumber.test(flexValues[1])) {\n          style.msFlex = flexValues[0] + ' ' + flexValues[1] + ' 0%';\n        } else {\n          style.msFlex = flexValues[0] + ' 1 ' + flexValues[1];\n        }\n        return;\n      default:\n        style.msFlex = value;\n    }\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"node_modules/inline-style-prefixer/lib/plugins/flexboxIE.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxIE;\nvar alternativeValues = {\n  'space-around': 'distribute',\n  'space-between': 'justify',\n  'flex-start': 'start',\n  'flex-end': 'end'\n};\nvar alternativeProps = {\n  alignContent: 'msFlexLinePack',\n  alignSelf: 'msFlexItemAlign',\n  alignItems: 'msFlexAlign',\n  justifyContent: 'msFlexPack',\n  order: 'msFlexOrder',\n  flexGrow: 'msFlexPositive',\n  flexShrink: 'msFlexNegative',\n  flexBasis: 'msFlexPreferredSize'\n  // Full expanded syntax is flex-grow | flex-shrink | flex-basis.\n};var flexShorthandMappings = {\n  auto: '1 1 auto',\n  inherit: 'inherit',\n  initial: '0 1 auto',\n  none: '0 0 auto',\n  unset: 'unset'\n};\nvar isUnitlessNumber = /^\\d+(\\.\\d+)?$/;\n\nfunction flexboxIE(property, value, style) {\n  if (Object.prototype.hasOwnProperty.call(alternativeProps, property)) {\n    style[alternativeProps[property]] = alternativeValues[value] || value;\n  }\n  if (property === 'flex') {\n    // For certain values we can do straight mappings based on the spec\n    // for the expansions.\n    if (Object.prototype.hasOwnProperty.call(flexShorthandMappings, value)) {\n      style.msFlex = flexShorthandMappings[value];\n      return;\n    }\n    // Here we have no direct mapping, so we favor looking for a\n    // unitless positive number as that will be the most common use-case.\n    if (isUnitlessNumber.test(value)) {\n      style.msFlex = value + ' 1 0%';\n      return;\n    }\n\n    // The next thing we can look for is if there are multiple values.\n    var flexValues = value.split(/\\s/);\n    // If we only have a single value that wasn't a positive unitless\n    // or a pre-mapped value, then we can assume it is a unit value.\n    switch (flexValues.length) {\n      case 1:\n        style.msFlex = '1 1 ' + value;\n        return;\n      case 2:\n        // If we have 2 units, then we expect that the first will\n        // always be a unitless number and represents flex-grow.\n        // The second unit will represent flex-shrink for a unitless\n        // value, or flex-basis otherwise.\n        if (isUnitlessNumber.test(flexValues[1])) {\n          style.msFlex = flexValues[0] + ' ' + flexValues[1] + ' 0%';\n        } else {\n          style.msFlex = flexValues[0] + ' 1 ' + flexValues[1];\n        }\n        return;\n      default:\n        style.msFlex = value;\n    }\n  }\n}"},"lineCount":73}},"error":null,"hash":"a10a3fcc8c9d5f8cb10d64dccf5c2f04","cacheData":{"env":{}}}